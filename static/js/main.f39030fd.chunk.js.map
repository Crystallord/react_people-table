{"version":3,"sources":["components/PeopleTable/PeopleTable.tsx","App.tsx","index.tsx"],"names":["PeopleTable","props","people","tableHead","Object","keys","map","item","person","values","personItem","name","App","state","query","peopleFromServer","getVisiblePeople","visiblePeople","lowerQuery","toLowerCase","filter","includes","this","className","type","value","onChange","e","setState","target","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yOAMaA,EAA+B,SAACC,GAC3C,IAAQC,EAAWD,EAAXC,OAEFC,EAAsBC,OAAOC,KAAKH,EAAO,IAE/C,OACE,kCACE,gCACE,6BACGC,EAAUG,KAAI,SAAAC,GAAI,OACjB,6BACGA,GADMA,UAMf,gCACGL,EAAOI,KAAI,SAAAE,GAAM,OAChB,6BACGJ,OAAOK,OAAOD,GAAQF,KAAI,SAAAI,GAAU,OACnC,6BACGA,GADMA,OAFJF,EAAOG,e,OCiCXC,G,kNA7CbC,MAAe,CACbC,MAAO,GACPZ,OAAO,YAAKa,I,EAGdC,iBAAmB,WACjB,MAA0B,EAAKH,MAAvBC,EAAR,EAAQA,MAAOZ,EAAf,EAAeA,OAEXe,EAAgBf,EAEpB,GAAIY,EAAO,CACT,IAAMI,EAAaJ,EAAMK,cAEzBF,EAAgBf,EACbkB,QAAO,SAAAZ,GAAM,OAAIA,EAAOG,KAAKQ,cAAcE,SAASH,MAGzD,OAAOD,G,4CAGT,WAAU,IAAD,OACCH,EAAUQ,KAAKT,MAAfC,MAEFG,EAAgBK,KAAKN,mBAE3B,OACE,sBAAKO,UAAU,MAAf,UACE,oDAAqBT,KAErB,uBACEU,KAAK,OACLC,MAAOX,EACPY,SAAU,SAACC,GACT,EAAKC,SAAS,CAAEd,MAAOa,EAAEE,OAAOJ,WAIV,IAAzBR,EAAca,QACb,cAAC,EAAD,CAAa5B,OAAQe,W,GAvCbc,IAAMC,YCPxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.f39030fd.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: React.FC<Props> = (props) => {\n  const { people } = props;\n\n  const tableHead: string[] = Object.keys(people[0]) as (keyof Person)[];\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          {tableHead.map(item => (\n            <th key={item}>\n              {item}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <tr key={person.name}>\n            {Object.values(person).map(personItem => (\n              <td key={personItem}>\n                {personItem}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { PeopleTable } from './components/PeopleTable';\nimport peopleFromServer from './api/people.json';\n\nimport './App.scss';\n\ntype State = {\n  query: string;\n  people: Person[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    query: '',\n    people: [...peopleFromServer as Person[]],\n  };\n\n  getVisiblePeople = () => {\n    const { query, people } = this.state;\n\n    let visiblePeople = people;\n\n    if (query) {\n      const lowerQuery = query.toLowerCase();\n\n      visiblePeople = people\n        .filter(person => person.name.toLowerCase().includes(lowerQuery));\n    }\n\n    return visiblePeople;\n  };\n\n  render() {\n    const { query } = this.state;\n\n    const visiblePeople = this.getVisiblePeople();\n\n    return (\n      <div className=\"App\">\n        <h1>{`People table ${query}`}</h1>\n\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(e) => {\n            this.setState({ query: e.target.value });\n          }}\n        />\n\n        {visiblePeople.length !== 0 && (\n          <PeopleTable people={visiblePeople} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}